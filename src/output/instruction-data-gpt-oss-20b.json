[
    {
        "instruction": "顧客からのクレームメールに対し、謝罪文と解決策を含む返信例を3通り、各文は200文字以内で作成してください。",
        "input": "商品の配送が遅れ、3日目にまで届かず、問い合わせても返答がない。何時に届くか教えてほしい。",
        "output": "1.  \n申し訳ございません。ご注文の商品は発送遅延により、予定より2日遅れました。追跡番号は【123456789】です。確認後、配送業者に直ちに再確認し、再送を手配いたします。ご迷惑をおかけし、今後はダブルチェックで再発防止いたします。  \n\n2.  \nご不便をおかけし誠に申し訳ありません。現在、配送センターにて確認中です。到着予定は**明日午前中**を目安に再送手配いたします。追跡番号は【987654321】。ご迷惑減らすため、翌日10%割引クーポンを発行いたします。  \n\n3.  \nお待たせして申し訳ありません。配送業者からの確認では**本日中**に到着予定です。追跡番号【555555555】で確認できます。加えて、次回ご購入時に使える無料クーポンを差し上げます。ご安心ください。",
        "server": "192.168.1.254:11434"
    },
    {
        "instruction": "気候変動と都市部のエネルギー消費に関する研究テーマで、研究目的・仮説・方法・予想結果をそれぞれ100文字以内で箇条書きにしてください。",
        "input": "",
        "output": "- **研究目的**: 気候変動が都市部エネルギー需要に与える影響を定量化し、低炭素シナリオを評価する。  \n- **仮説**: 高温多湿化が夏季の冷房需要を増加させ、全体エネルギー消費を10%拡大すると予測する。  \n- **方法**: 過去30年の気象・電力データを統計モデルで回帰分析し、将来シナリオを作成する。  \n- **予想結果**: 気候変動により夏季冷房需要が20%増、全体エネルギー消費は15%上昇。",
        "server": "192.168.1.252:11434"
    },
    {
        "instruction": "指定された日本語の文章に含まれる助詞の誤用を指摘し、正しい表現と簡単な説明をそれぞれ添えて示してください。",
        "input": "昨日、私は本を読むが楽しいと思いました。",
        "output": "**誤用箇所**  \n- 「読むが楽しい」  \n\n**正しい表現**  \n- 「昨日、私は本を読むのが楽しいと思いました。」  \n  もしくは  \n- 「昨日、私は本を読むと楽しいと思いました。」  \n\n**簡単な説明**  \n- **が**は「主語」や「新しい情報」を示す助詞です。  \n- 「読む」は動詞で、直接「が」を付けると「読む（主語）が楽しい」という主語の構造になり、意味が通りません。  \n- 「読む**のが**」は動作を名詞化し「読むことが楽しい」という名詞句を作るため、助詞 **が** が正しく使われます。  \n- 「読む**と**」は「読むときに楽しい」という結果・条件を示す接続助詞で、こちらも自然な表現です。",
        "server": "localhost:11434"
    },
    {
        "instruction": "PythonでCSVを読み込み、欠損値を除去し、各列の平均値を計算して標準出力に表示するスクリプトを作成してください。",
        "input": "data.csv",
        "output": "以下は、`data.csv` を読み込み、欠損値を除去してから各列（数値列）の平均値を計算し、標準出力に表示する Python スクリプトです。  \n※`pandas` がインストールされていることが前提です（`pip install pandas` で入手できます）。\n\n```python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport pandas as pd\nimport sys\n\ndef main(csv_path: str) -> None:\n    \"\"\"\n    CSV を読み込み、欠損値を除去してから各列の平均値を計算し、\n    標準出力に表示する。\n    \"\"\"\n    try:\n        # CSV を読み込む\n        df = pd.read_csv(csv_path)\n    except FileNotFoundError:\n        print(f\"エラー: ファイル '{csv_path}' が見つかりません。\", file=sys.stderr)\n        sys.exit(1)\n    except pd.errors.ParserError as e:\n        print(f\"エラー: CSV の解析中に問題が発生しました。\\n{e}\", file=sys.stderr)\n        sys.exit(1)\n\n    # 欠損値（NaN）が含まれる行を削除\n    df_clean = df.dropna(axis=0)\n\n    # 数値列のみを抽出\n    numeric_df = df_clean.select_dtypes(include=['number'])\n\n    if numeric_df.empty:\n        print(\"数値列が見つかりませんでした。平均値を計算できません。\")\n        return\n\n    # 各列の平均値を計算\n    column_means = numeric_df.mean()\n\n    # 結果を表示\n    print(\"各列の平均値:\")\n    for col, mean_val in column_means.items():\n        print(f\"  {col}: {mean_val}\")\n\nif __name__ == \"__main__\":\n    # コマンドライン引数で CSV ファイルパスを受け取る\n    if len(sys.argv) != 2:\n        print(f\"使用方法: {sys.argv[0]} <csvファイルパス>\", file=sys.stderr)\n        sys.exit(1)\n\n    csv_file_path = sys.argv[1]\n    main(csv_file_path)\n```\n\n### 実行例\n\n```bash\n$ python3 calc_mean.py data.csv\n各列の平均値:\n  age: 34.5\n  salary: 51200.0\n  ...\n```\n\n### ポイント\n\n1. **`dropna()`**  \n   `axis=0` により「行単位」で欠損値を含む行を削除します。  \n   行全体が欠損値の場合はその行を無視し、列ごとの平均計算に影響を与えません。\n\n2. **数値列の選択**  \n   `select_dtypes(include=['number'])` で数値型（int, float, …）の列だけを抽出。  \n   文字列列やカテゴリ列を平均計算しようとすると `NaN` になるかエラーになるためです。\n\n3. **エラーハンドリング**  \n   ファイルが存在しない、あるいはパースできない場合に適切なメッセージを出力して終了します。\n\n4. **実行時の引数**  \n   `data.csv` をスクリプトに渡すだけで済むようにしています。  \n   もし同じフォルダにある場合は `python3 calc_mean.py data.csv` とすれば OK です。\n\nこれで、CSV から欠損値を除外しつつ、各列の平均値を簡単に確認できます。ぜひお試しください。",
        "server": "192.168.1.254:11434"
    },
    {
        "instruction": "新卒採用の面接でよく聞かれる質問に対する回答例を3つ、各回答を200語以内で作成し、語尾は敬語で統一してください。",
        "input": "",
        "output": "**回答例①：志望動機（200語以内）**  \n1. 私は大学で情報工学を専攻し、プログラミングとシステム設計に情熱を注いできました。  \n2. 学部のプロジェクトでチームを率いてWebサービスを構築した経験から、協働とリーダーシップの重要性を実感いたしました。  \n3. 貴社が掲げる「デジタルイノベーションによる社会課題の解決」というミッションに深く共感し、私のスキルを活かしたいと考えております。  \n4. 特に貴社のAIを活用した業務改善プロジェクトに関心があり、学術研究で得た機械学習の知識を貢献できると確信しております。  \n5. さらに、インターンシップで得た業務フローの可視化経験を通じて、業務プロセスの最適化に寄与したいと考えております。  \n6. 私は課題解決に対して根気強く取り組む姿勢を持ち、失敗を学びに変える柔軟性も備えております。  \n7. 貴社の多様な事業領域で得られる経験を通じて、幅広い視野と実践力を身につけていきたいと思っております。  \n8. 従来の枠にとらわれない発想で、新しい価値を創造し続ける環境が、私の成長に最適だと確信しております。  \n9. 貴社で働くことができれば、私の技術力と創造性を最大限に発揮し、共に社会へ貢献できると信じております。  \n10. よろしくお願いいたします。  \n\n**回答例②：長所・短所（200語以内）**  \n1. 私の長所は、問題解決に論理的かつ柔軟にアプローチできる点でございます。  \n2. 学部では、複雑なデータセットを統計手法で解析し、仮説を検証する作業を行いました。  \n3. その結果、数値的に意味のある結論を導出し、教授から高い評価をいただきました。  \n4. チームプロジェクトでは、積極的にコミュニケーションを取り、メンバーの意見を統合することでプロジェクトの品質を向上させました。  \n5. 短所としては、完璧を求めすぎてタスクの優先順位付けが遅れることがございます。  \n6. そのため、タスク管理ツールを活用し、締め切りを設定して改善に努めております。  \n7. また、プレゼンテーションでは聴衆の反応を把握しやすくするため、事前にスライド構成を練習しています。  \n8. この短所を補うために、日々タイムマネジメントのスキルを磨き、成果に反映させております。  \n9. よろしくお願いいたします。  \n\n**回答例③：将来の目標（200語以内）**  \n1. 私の将来の目標は、グローバルなIT企業でプロダクトマネージャーとしてイノベーションを牽引することにございます。  \n2. 大学時代に学んだシステム開発とビジネス戦略の知識を統合し、顧客価値の創造に注力したいと考えております。  \n3. まずは貴社の製品開発チームに所属し、ユーザーのニーズを深く理解する経験を積みたいと考えております。  \n4. その後、プロジェクトリーダーとして複数の国での展開を担い、文化的差異を乗り越えるマネジメントスキルを磨きたいと思います。  \n5. さらに、データ分析とAI技術を活用した意思決定プロセスを構築し、事業成長を加速させることを目指しております。  \n6. 私は常に学び続ける姿勢を大切にしており、業界の最新トレンドをキャッチアップしながらスキルを向上させてまいります。  \n7. 将来的には、社会課題の解決に貢献できる製品をリードし、持続可能な価値を創出したいと考えております。  \n8. このようなビジョンを実現するために、貴社での経験を最大限に活かし、成果を積み重ねていく所存でございます。  \n9. よろしくお願いいたします。",
        "server": "192.168.1.252:11434"
    },
    {
        "instruction": "日本語のビジネスメールで、新製品の発売日を伝える案内文を、フォーマルかつ親しみやすい口調で500文字以内に作成してください",
        "input": "",
        "output": "件名: 新製品『XYZ』発売日のお知らせ  \n\nいつも大変お世話になっております。ABC株式会社の山田太郎です。  \n\nこの度、弊社では新製品『XYZ』を2025年9月15日より販売開始いたします。  \n『XYZ』は、従来の機能に加えて、ユーザーの利便性を高める新機能を搭載しております。  \n\nお手元に届くときの楽しみをぜひお確かめください。ご興味がおありの方は、ぜひとも詳細をご覧いただければ幸いです。  \n\nご質問等ございましたら、お気軽にお問い合わせください。  \n今後とも何卒よろしくお願い申し上げます。  \n\n敬具  \n\n山田 太郎  \nABC株式会社  \nTEL: 03-1234-5678  \nE‑mail: yamada@abc.co.jp",
        "server": "localhost:11434"
    },
    {
        "instruction": "小学6年生向けの数列の説明と例題を含む解説記事を400文字以内で作成し、例題を解く際のステップバイステップ解説を添えてください。",
        "input": "",
        "output": "数列とは「順に並べた数の集まり」です。例えば2,5,8,11…は毎回3ずつ増える等差数列。最初の数をa₁、差をdとすると、n番目の数は aₙ = a₁ + (n‑1)d で求められます。例題：10番目の数を求めよ。手順① a₁ = 2, d = 3②公式に代入 a₁₀ = 2 + (10‑1)×3③計算 2 + 27 = 29。答えは29です。",
        "server": "192.168.1.254:11434"
    },
    {
        "instruction": "Pythonでpandasを使い、指定されたCSVファイルの各列の欠損値をカウントし、結果をデータフレームにして「missing_counts.csv」という名前でCSVに書き出すスクリプトを書いてください。",
        "input": "入力したいCSVファイルのパスを教えてください",
        "output": "以下は、Python と **pandas** を使って  \n1. ユーザーが指定した CSV ファイルを読み込む  \n2. 各列の欠損値（NaN）をカウントする  \n3. カウント結果を `missing_counts.csv` というファイルに書き出す、最小構成のスクリプトです。  \n\n```python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nmissing_counter.py\n\n指定した CSV ファイルの各列における欠損値 (NaN) の個数をカウントし、\n結果を 'missing_counts.csv' に出力します。\n\n使い方:\n    python missing_counter.py\n\n実行時に CSV ファイルのパスを入力するように促されます。\n\"\"\"\n\nimport sys\nimport pathlib\n\ntry:\n    import pandas as pd\nexcept ImportError:\n    print(\"pandas がインストールされていません。\")\n    print(\"pip install pandas\")\n    sys.exit(1)\n\n\ndef main() -> None:\n    # ユーザーから入力を受け取る\n    csv_path = input(\"入力したいCSVファイルのパスを教えてください: \").strip()\n\n    # パスが空文字なら終了\n    if not csv_path:\n        print(\"パスが入力されませんでした。終了します。\")\n        return\n\n    # pathlib を使ってパスを標準化\n    file_path = pathlib.Path(csv_path).expanduser().resolve()\n\n    if not file_path.is_file():\n        print(f\"ファイルが存在しません: {file_path}\")\n        return\n\n    try:\n        df = pd.read_csv(file_path)\n    except Exception as e:\n        print(f\"CSV ファイルの読み込みに失敗しました: {e}\")\n        return\n\n    # 欠損値のカウント\n    missing_counts = df.isna().sum()\n\n    # DataFrame に変換（列名: 'column', 'missing_count'）\n    result_df = pd.DataFrame({\n        'column': missing_counts.index,\n        'missing_count': missing_counts.values\n    })\n\n    # 出力先のパス\n    output_path = file_path.parent / \"missing_counts.csv\"\n\n    try:\n        result_df.to_csv(output_path, index=False)\n        print(f\"欠損値カウント結果を {output_path} に書き込みました。\")\n    except Exception as e:\n        print(f\"結果の書き込みに失敗しました: {e}\")\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### 使い方\n\n1. 上記コードを `missing_counter.py` という名前で保存します。  \n2. ターミナル（コマンドプロンプト）でスクリプトのあるディレクトリに移動し、  \n   ```\n   python missing_counter.py\n   ```  \n   を実行します。  \n3. 「入力したいCSVファイルのパスを教えてください:」と表示されたら、対象 CSV のパスを入力します。  \n4. スクリプトが実行され、同じフォルダに `missing_counts.csv` が作成されます。\n\n### 補足\n\n- **pandas が未インストールの場合**  \n  ```bash\n  pip install pandas\n  ```\n\n- **欠損値以外の判定をしたい場合**  \n  `df.isna()` を `df.isnull()` や `df.isnull().sum()` などに置き換えると同じ結果が得られます。\n\n- **出力ファイル名を変更したい場合**  \n  `output_path = file_path.parent / \"missing_counts.csv\"` の `\"missing_counts.csv\"` を好きな名前に書き換えてください。  \n\nこれで、任意の CSV ファイルに対して簡単に欠損値のカウントレポートを作成できます。",
        "server": "192.168.1.252:11434"
    },
    {
        "instruction": "提示されたビジネスレポートを200語以内で日本語にまとめ、主要な提案を箇条書きで示してください。",
        "input": "本レポートは2024年3月の売上データと顧客満足度調査結果を基に、主要市場でのシェア拡大戦略と新製品開発の優先順位を分析しています。売上は前年同期比で12％増加し、オンラインチャネルの売上比率は30％に達しました。顧客満足度は80％を維持しつつも、配送遅延とカスタマーサポートの応答時間が低評価の原因となっています。市場調査では、若年層の購買意欲が高いことが確認され、機能性と価格帯の最適化が鍵となると示唆されています。",
        "output": "**200語以内のまとめ**  \n2024年3月の売上データと顧客満足度調査を基に、本レポートは主要市場でのシェア拡大戦略と新製品開発の優先順位を分析した。売上は前年同期比12％増加し、オンラインチャネル比率は30％に到達。顧客満足度は80％を維持しているが、配送遅延とカスタマーサポートの応答時間が低評価の主因となっている。市場調査では若年層の購買意欲が高く、機能性と価格帯の最適化が鍵であると示唆された。これらの結果を踏まえ、次の施策を推奨する。\n\n**主要提案**  \n- **配送プロセスの最適化**：リアルタイム追跡システムを導入し、遅延削減と顧客への情報提供を強化。  \n- **カスタマーサポートの迅速化**：AIチャットボットとFAQの充実で平均応答時間を半減。  \n- **オンラインチャネルのUX向上**：モバイルアプリの購入フローを簡素化し、コンバージョン率を向上。  \n- **若年層向け製品開発**：機能性重視のミニマルデザインを採用し、価格は中価格帯で設定。  \n- **継続的な市場調査**：競合分析と顧客ニーズ調査を定期的に実施し、価格・機能性の最適化を継続。",
        "server": "localhost:11434"
    },
    {
        "instruction": "PythonでPandasを使用し、data.csvから列'A'と'B'を読み込み、列'A'で昇順にソートし、列'B'の平均値を小数点以下2桁で計算してコンソールに出力するスクリプトを書いてください。",
        "input": "",
        "output": "以下は、**data.csv** から列 **A** と **B** を読み込み、A列で昇順に並べ替えてから、B列の平均値を小数点以下2桁で計算してコンソールに出力する最小限のスクリプトです。\n\n```python\n# -*- coding: utf-8 -*-\nimport pandas as pd\n\n# 1. CSVを読み込む（A,B 列だけを取得）\ndf = pd.read_csv('data.csv', usecols=['A', 'B'])\n\n# 2. A列で昇順にソート\ndf_sorted = df.sort_values(by='A')\n\n# 3. B列の平均値を計算（欠損値は自動で除外されます）\nmean_b = df_sorted['B'].mean()\n\n# 4. 平均値を小数点以下2桁で表示\nprint(f\"平均値: {mean_b:.2f}\")\n```\n\n### ポイント解説\n\n| ステップ | 目的 | 補足 |\n|----------|------|------|\n| `usecols=['A','B']` | 必要な列だけを読み込むことでメモリ効率を上げる | `data.csv` に A,B 以外の列があっても安全 |\n| `sort_values(by='A')` | A列で昇順に並べ替える | デフォルトは昇順（`ascending=True`） |\n| `df_sorted['B'].mean()` | B列の平均値を計算 | 欠損値（NaN）は自動で除外 |\n| `f\"{mean_b:.2f}\"` | 小数点以下2桁にフォーマット | 例: `12.345` → `12.35` |\n\n#### 実行例\n\n```\n$ python calc_mean.py\n平均値: 12.34\n```\n\n必要に応じて、ソート後の DataFrame を別途表示したい場合は `print(df_sorted.head())` のように追加してください。",
        "server": "192.168.1.254:11434"
    },
    {
        "instruction": "小学生向けの日本語読解問題を5題作成し、各問題ごとに正解と解説を200文字以内で記載してください。",
        "input": "",
        "output": "**【問題１】**  \nある日、タローとともに川へ遊びに行った。そこで赤い魚が泳いでいて、タローは水の中で何かを探しているようだった。タローは魚をどうしていた？  \n\n**答え**  \nタローは魚を捕まえようとしていた。  \n\n**解説**  \n川で泳いでいた魚に目が留まったタローは、手で掴もうとした行動が描かれているため。  \n\n---  \n\n**【問題２】**  \n学校の図書室で、みなさんは新しい絵本を読みました。ページをめくるたびに、森の動物たちが話し始めます。どの動物が最初に話し始めた？  \n\n**答え**  \nうさぎが最初に話し始めた。  \n\n**解説**  \n絵本の冒頭で、うさぎが話を始めるシーンが描かれているので、最初に話すのはうさぎ。  \n\n---  \n\n**【問題３】**  \n雨の日、クラスでピクニックを予定していたが、雨が降ったため中止。先生はみんなに何を提案した？  \n\n**答え**  \n先生は図書館で本を読むことを提案した。  \n\n**解説**  \n雨のため屋外に行けなかったので、先生は室内でできる「図書館で本を読む」を提案した。  \n\n---  \n\n**【問題４】**  \nおばあちゃんの家で、ケーキを焼いているときに、焼き加減を確かめるために何をした？  \n\n**答え**  \nおばあちゃんはピックを使って焼き加減を確認した。  \n\n**解説**  \n焼き加減を確かめるとき、ピック（竹串）を挿入し、きれいに抜けるかで完成度を判断する方法。  \n\n---  \n\n**【問題５】**  \n学校の運動会で、クラスメートが走っているときに、先生が何を観察した？  \n\n**答え**  \n先生は走り方と姿勢を観察した。  \n\n**解説**  \n運動会で走る子は姿勢とフォームが重要。先生はそれらを観察して適切な指導を行う。",
        "server": "192.168.1.252:11434"
    },
    {
        "instruction": "日本語の敬語表現を使い、ビジネスメールでの顧客への謝罪と再発防止策を説明する例文を3通り作成してください。",
        "input": "",
        "output": "**例文 1 – 受注遅延に関する謝罪と再発防止策**  \n**件名**：お届け遅延についてのお詫びと再発防止策のご報告  \n\n拝啓  \n○○株式会社　○○部　○○様  \n\nいつも格別のお引き立てを賜り、誠にありがとうございます。  \nこの度は、弊社からお届けいたしました商品が予定より遅延し、ご迷惑をお掛けしましたこと、深くお詫び申し上げます。  \n\n遅延の主な原因は、発注から出荷までの在庫確認プロセスにおける手作業のチェックミスでございました。  \n当社の品質管理担当者がシステムと照合せず、誤って在庫が足りないと判断した結果、出荷を遅らせてしまいました。  \n\nつきましては、以下の再発防止策を講じております。  \n\n1. **在庫管理システムの自動化** – 発注時にリアルタイムで在庫を確認できるよう、システムをアップデートいたしました。  \n2. **業務フローの見直し** – 出荷前の二重チェックを導入し、担当者が確認した後に必ず上長が承認するプロセスに変更いたしました。  \n3. **定期的な社内教育** – 物流部門全体で在庫管理に関する研修を毎月実施し、ミスの発生率を低減させます。  \n\nお手数をお掛けしましたこと、重ねてお詫び申し上げます。今後はこのような遅延が再び起こらぬよう、社員一同徹底してまいります。  \n\n何かご不明点やご要望がございましたら、いつでもご連絡ください。  \n引き続き、変わらぬご愛顧を賜りますようお願い申し上げます。  \n\n敬具  \n\n○○株式会社  \n営業部　○○（担当）  \nTEL: 03‑xxxx‑xxxx  E‑mail: xxxx@xxxx.co.jp  \n\n---  \n\n**例文 2 – 請求書の金額誤記に関する謝罪と再発防止策**  \n**件名**：請求書金額誤記についてのお詫びと改善策のご案内  \n\n拝啓  \n○○株式会社　○○部　○○様  \n\nいつもお世話になっております。  \n先日送付いたしました請求書に、金額が誤って記載されておりましたこと、深くお詫び申し上げます。  \n\n誤記の原因は、請求書作成時に使用した見積もりデータのコピー＆ペーストミスに起因いたしました。  \n担当者が旧データを再利用し、金額を正しく更新できていない状態で送付してしまいました。  \n\n以下の対策を実施し、再発防止に努めております。  \n\n1. **自動チェック機能の導入** – 金額入力時に自動で計算し、入力ミスを検知するシステムを導入。  \n2. **業務マニュアルの改訂** – 請求書作成手順を見直し、必ず二重確認を行うようルール化。  \n3. **定期監査の実施** – 月次で請求書データの整合性を確認し、問題があれば即座に是正。  \n\nご迷惑とご不便をおかけしましたこと、改めてお詫び申し上げます。  \n誤金額に関しては、速やかに訂正請求書をお送りし、差額分を返金または次回ご利用の割引とさせていただきます。  \n\nご質問やご要望がございましたら、いつでもご連絡ください。  \n今後ともご指導ご鞭撻のほど、よろしくお願い申し上げます。  \n\n敬具  \n\n○○株式会社  \n経理部　○○（担当）  \nTEL: 03‑xxxx‑xxxx  E‑mail: xxxx@xxxx.co.jp  \n\n---  \n\n**例文 3 – 誤送付商品の謝罪と再発防止策**  \n**件名**：誤送付商品に関するお詫びと対策のご報告  \n\n拝啓  \n○○株式会社　○○部　○○様  \n\nいつもお取引いただき、誠にありがとうございます。  \nこの度は、ご注文いただいた商品と異なる商品を送付してしまい、ご不便とご迷惑をお掛けしましたこと、心よりお詫び申し上げます。  \n\n誤送付の原因は、ピッキング作業中にバーコードスキャンの読み取りミスが発生し、誤った商品を梱包したためでございます。  \n当社のピッキングスタッフが同じバーコードを二度読み取った結果、誤った品番を選択してしまいました。  \n\n再発防止策として、以下の施策を実施いたしました。  \n\n1. **バーコードリーダーの精度向上** – 最新型リーダーを導入し、読み取りエラーを最小化。  \n2. **ピッキングプロセスの見直し** – ピッキング時に必ず商品の写真とバーコードを照合し、上司が確認するフローを追加。  \n3. **作業者研修の強化** – ピッキング担当者を対象に、バーコード操作と品質管理に関する再教育を実施。  \n\nご迷惑をお掛けしたことを重く受け止め、誤送付商品は速やかに回収し、正しい商品をお届けいたします。  \nまた、今回の件に対しては送料の返金及び次回ご注文時の10％割引をご提供させていただきます。  \n\n何かご不明点やご要望がございましたら、どうぞお気軽にお問い合わせください。  \n今後はこのようなミスが発生しないよう、社員一同全力で改善に取り組んでまいります。  \n\n敬具  \n\n○○株式会社  \n配送部　○○（担当）  \nTEL: 03‑xxxx‑xxxx  E‑mail: xxxx@xxxx.co.jp  ",
        "server": "localhost:11434"
    },
    {
        "instruction": "社内メールでのプロジェクト進捗報告を、担当者ごとに箇条書きで200字以内で作成してください",
        "input": "担当者名と進捗状況を教えてください",
        "output": "以下の情報をいただけますか？\n\n- 担当者名  \n- 各担当者の現在の進捗状況（具体的な数字や完了タスクなど）\n\nこれらを教えていただければ、社内メール用の200字以内の箇条書き進捗報告を作成いたします。",
        "server": "192.168.1.252:11434"
    },
    {
        "instruction": "顧客からの問い合わせに対し、謝罪と解決策を示す返信メールを作成し、件名、本文、署名を含め、本文は150文字以内で、敬語を使ってください。",
        "input": "顧客名 佐藤太郎 商品 ABC 問題 届かない 送料返金を希望",
        "output": "**件名**  \nABC商品の配送遅延についてのお詫びとご返金のご案内  \n\n**本文**  \n佐藤様  \n\nこの度はABC商品のお届けが遅れ、ご不便をお掛けし誠に申し訳ございません。速やかに送料を返金させていただきます。ご確認いただけますと幸いです。何卒よろしくお願い申し上げます。  \n\n**署名**  \n株式会社○○カスタマーサポート  \n佐藤次郎 　担当  \n電話：0120‑XXX‑YYY 　メール：support@example.com",
        "server": "192.168.1.254:11434"
    },
    {
        "instruction": "企業の社内研修資料を5つのセクションに分け、各セクションの概要を300文字以内で作成してください。",
        "input": "",
        "output": "**セクション1：イントロダクションと研修の目的**  \n本セクションでは、研修の背景、目的、組織の価値観とミッションを明確にし、参加者が何を学び、どのように活かすかを共有します。研修全体のスケジュールと評価方法を簡潔に説明し、学習へのモチベーションを高めます。  \n\n**セクション2：効果的なコミュニケーションスキル**  \n相手を理解し、自分の意図を正確に伝えるための基本的なコミュニケーション手法を学びます。アクティブリスニング、質問の仕方、フィードバックの与え方などを実践的に演習し、職場で即実行できるスキルを習得します。  \n\n**セクション3：チームビルディングと協働**  \n多様なメンバーが一丸となって成果を出すためのチーム構築理論と実践方法を紹介します。役割分担、信頼構築、対立解決のテクニックをケーススタディとワークショップで体験し、協働力を高めます。  \n\n**セクション4：リーダーシップの実践**  \nリーダーとして必要なビジョン創出、意思決定、影響力の発揮方法を学びます。リーダーシップスタイルの自己診断と、具体的な行動計画の策定を通じて、リーダーシップを発揮できる基盤を築きます。  \n\n**セクション5：評価と継続的改善**  \n研修で得た知識とスキルをどのように評価し、職場で持続的に改善していくかを考えます。SMART目標設定、KPIの活用、360°フィードバックの実践方法を学び、自己成長と組織発展を連動させます。",
        "server": "localhost:11434"
    },
    {
        "instruction": "JavaScriptでfetch APIを使い、URL『https://example.com/data.json』からJSONデータを取得し、キー『name』の値をコンソールに出力する関数を書いてください（5行以内）。",
        "input": "",
        "output": "```javascript\nasync function getName() {\n  const res = await fetch('https://example.com/data.json');\n  const data = await res.json();\n  console.log(data.name);\n}\n```",
        "server": "192.168.1.254:11434"
    },
    {
        "instruction": "以下の日本語の文章を200語以内で簡潔に要約し、主要なキーワードを5項目リスト化して定義を添えてください",
        "input": "太陽の光が海に反射して輝き漁船が港に帰ってきて船員たちは疲れたが満足した気持ちで夕暮れを迎える",
        "output": "**要約（200語以内）**  \n夕方、太陽の光が海面に反射し、輝きを放つ。漁船が港へ戻り、船員たちは一日の労働で疲れたが、得た漁獲に満足しつつ、夕暮れの穏やかな景色に心を癒される。  \n\n**キーワード（定義付き）**  \n1. **太陽の光** – 地球に届く日射線で、海面に反射して光輝きを生む。  \n2. **海** – 広大な水域で、太陽光の反射対象となる水面を持つ。  \n3. **漁船** – 釣りを目的とした船で、港へ戻る航行を行う。  \n4. **船員** – 漁船を操縦・操業する人々で、労働の疲労と成果に満足する。  \n5. **夕暮れ** – 日没後の時間帯で、光の色が変わり静寂と落ち着きを伴う。",
        "server": "192.168.1.252:11434"
    },
    {
        "instruction": "ビジネスメールの返信を作成し、件名は「ご提案ありがとうございます」、本文は丁寧語で3文以内にまとめてください。",
        "input": "",
        "output": "**件名**  \nご提案ありがとうございます  \n\n**本文**  \nご提案いただき、誠にありがとうございます。内容を確認のうえ、社内で検討し、改めてご連絡させていただきます。ご不明点等ございましたら、お気軽にお知らせください。",
        "server": "localhost:11434"
    },
    {
        "instruction": "与えられたビジネス会議の議事録を150字以内で要約し、重要ポイントを箇条書きで5つ挙げてください。",
        "input": "議題：売上報告、新製品発表。参加者：営業部長、開発部長、マーケティング担当。営業部長がQ3売上10%増を報告し、開発部長が新製品のリリース予定を発表。マーケティング担当が広告戦略を提案。次回は4月15日に詳細検討予定。",
        "output": "**要約（150字以内）**  \n営業部長がQ3売上10%増を報告、開発部長は新製品リリース予定を発表、マーケが広告戦略提案。次回は4/15に詳細検討予定。\n\n**重要ポイント（5つ）**  \n1. Q3売上が前年比10%増加。  \n2. 新製品のリリース予定が決定。  \n3. マーケティング担当が広告戦略を提案。  \n4. 次回会議は4月15日に設定。  \n5. 全社協力で販売戦略を統合する方針。",
        "server": "192.168.1.254:11434"
    },
    {
        "instruction": "日本語の受動態を使った例文を5つ作成し、それぞれに英訳と文法解説を添えてください。",
        "input": "",
        "output": "以下に、受動態を使った5つの例文を示し、各文について英訳と文法解説を添えました。  \n\n| # | 日本語（受動態） | 英訳 | 文法解説 |\n|---|----------------|------|----------|\n| 1 | 彼にケーキが作られた。 | The cake was made by him. | - **作られる**（作る＋受動助動詞）＝受動形。<br> - 主語は **ケーキ**（作られたもの）。<br> - 行為者（作業を行う人）は **彼**で、**に**が格助詞として使われている。<br> - 受動態は「作られたことが**受け手**にとって重要」であることを示す。 |\n| 2 | 私は先生に褒められた。 | I was praised by the teacher. | - **褒められる**（褒める＋受動助動詞）。<br> - 主語は **私**。<br> - 行為者は **先生**、**に**で示される。<br> - 受動態は、**私**が「褒められる」という受け身の状態を表す。 |\n| 3 | 彼女の写真は誰かに撮られた。 | Her photo was taken by someone. | - **撮られる**（撮る＋受動助動詞）。<br> - 主語は **彼女の写真**。<br> - 行為者は **誰か**（不明だが存在する）。<br> - 「撮られた」＝「誰かに撮られた」という受け身の状態を示す。 |\n| 4 | 彼は同僚に仕事を押し付けられた。 | He was forced to do work by a colleague. | - **押し付けられる**（押し付ける＋受動助動詞）＝「押し付けられる」＝「押し付けられた」。<br> - 主語は **彼**。<br> - 行為者は **同僚**。<br> - 受動態は、**彼**が「押し付けられた」＝強制された状態を表す。 |\n| 5 | 先生に宿題をやらせられた。 | I was made to do homework by the teacher. | - **やらせられる**は **やらせる**（作る＋使役）に **られる**（受動）を付けた「使役受動」形。<br> - 主語は **私**。<br> - 行為者は **先生**。<br> - 使役受動は「行為者が目的語を使役して自分に作用させた」ことを表し、**私は先生に**「宿題をやらせられた」＝「先生にやらされる」状態を示す。 |\n\n---\n\n### 受動態のポイントまとめ\n\n1. **受動語尾**  \n   - られる／れる（語幹が未然形＋られる／れる）  \n   - 例：作られる、褒められる、撮られる、押し付けられる  \n\n2. **行為者の表記**  \n   - **に**または**から**で示す（行為者は「どこから」「誰から」受けるかを示す）。  \n   - 例：彼に、先生に、誰かに  \n\n3. **受動態のニュアンス**  \n   - ① 受け手が行為を受けた状態  \n   - ② 受け手の意図しない、もしくは強制的に受けた場合に多く使われる  \n\n4. **使役受動**  \n   - 使役動詞（やらせるなど）＋受動語尾（られる）で作られる。  \n   - 「～させられた」＝「～させられる」＝「～させる」＝「強制された」意味。  \n\n5. **行為者が省略されるケース**  \n   - 行為者が不明・重要でない場合、**に**の後ろを省略。  \n   - 例：ケーキが作られた。  \n\n以上を踏まえて、受動態は「行為の受け手の視点」を前面に出す表現方法であり、状況や感情を強調したいときに有効です。ぜひ活用してみてください！",
        "server": "192.168.1.252:11434"
    },
    {
        "instruction": "日本語の会話文でビジネスメールの挨拶文を、親しみやすく丁寧な口調で3通例示し、各例を80文字以内にまとめてください。",
        "input": "",
        "output": "1. お疲れ様です。いつもご協力いただきありがとうございます。今回の件についてご検討いただければ幸いです。  \n2. いつも大変お世話になっております。新しいプロジェクトについてご意見いただけると嬉しいです。  \n3. 平素より格別のお引き立てを賜り、厚く御礼申し上げます。本日お知らせしたい事項がございますので、ぜひご確認ください。",
        "server": "localhost:11434"
    },
    {
        "instruction": "PythonでCSVファイルを読み込み、指定列の平均値と中央値を計算して表示するスクリプトを書いてください",
        "input": "sample.csv age",
        "output": "以下は、CSV ファイルを読み込み、指定した列（例では **age**）の平均値と中央値を計算して表示する Python スクリプトです。  \n標準ライブラリのみで完結できるバージョンと、pandas を使った簡潔なバージョンの2通りを紹介します。\n\n---\n\n## 1. 標準ライブラリだけで実装するバージョン\n\n```python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nmean_median.py\n\nCSV ファイルを読み込み、指定した列の平均値と中央値を計算して表示するスクリプト。\n標準ライブラリのみで実装しています。\n\"\"\"\n\nimport csv\nimport statistics\nimport sys\nimport os\n\n\ndef read_column(csv_file: str, column_name: str) -> list[float]:\n    \"\"\"\n    指定列の値を float のリストとして返す\n    \"\"\"\n    if not os.path.exists(csv_file):\n        raise FileNotFoundError(f\"File not found: {csv_file}\")\n\n    values = []\n\n    with open(csv_file, newline=\"\", encoding=\"utf-8\") as f:\n        reader = csv.DictReader(f)\n        if column_name not in reader.fieldnames:\n            raise ValueError(f\"Column '{column_name}' not found in CSV header.\")\n        for row in reader:\n            # 空文字や変換できない値は無視する\n            raw = row[column_name].strip()\n            if raw == \"\":\n                continue\n            try:\n                values.append(float(raw))\n            except ValueError:\n                # 変換できない値はスキップ\n                continue\n\n    if not values:\n        raise ValueError(f\"No valid numeric data found in column '{column_name}'.\")\n    return values\n\n\ndef main():\n    if len(sys.argv) != 3:\n        print(f\"Usage: {sys.argv[0]} <csv_file> <column_name>\")\n        sys.exit(1)\n\n    csv_file = sys.argv[1]\n    column_name = sys.argv[2]\n\n    try:\n        data = read_column(csv_file, column_name)\n        mean_val = statistics.mean(data)\n        median_val = statistics.median(data)\n    except Exception as e:\n        print(f\"Error: {e}\")\n        sys.exit(1)\n\n    print(f\"Column: {column_name}\")\n    print(f\"Count: {len(data)}\")\n    print(f\"Mean:   {mean_val:.4f}\")\n    print(f\"Median: {median_val:.4f}\")\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### 実行例\n\n```bash\n$ python mean_median.py sample.csv age\nColumn: age\nCount: 100\nMean:   34.5600\nMedian: 32.0000\n```\n\n---\n\n## 2. pandas を使った簡潔版\n\npandas を使うとコードが短くなりますが、`pandas` と `numpy` がインストールされている必要があります。\n\n```python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nmean_median_pandas.py\n\npandas を使って CSV の列の平均値と中央値を計算するスクリプト\n\"\"\"\n\nimport pandas as pd\nimport sys\nimport os\n\n\ndef main():\n    if len(sys.argv) != 3:\n        print(f\"Usage: {sys.argv[0]} <csv_file> <column_name>\")\n        sys.exit(1)\n\n    csv_file = sys.argv[1]\n    column_name = sys.argv[2]\n\n    if not os.path.exists(csv_file):\n        print(f\"Error: File not found: {csv_file}\")\n        sys.exit(1)\n\n    df = pd.read_csv(csv_file, encoding=\"utf-8\")\n\n    if column_name not in df.columns:\n        print(f\"Error: Column '{column_name}' not found in CSV.\")\n        sys.exit(1)\n\n    # 数値に変換できない値は NaN として扱う\n    series = pd.to_numeric(df[column_name], errors=\"coerce\")\n\n    mean_val = series.mean()\n    median_val = series.median()\n\n    print(f\"Column: {column_name}\")\n    print(f\"Count: {series.count()}\")\n    print(f\"Mean:   {mean_val:.4f}\")\n    print(f\"Median: {median_val:.4f}\")\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### 実行例\n\n```bash\n$ python mean_median_pandas.py sample.csv age\nColumn: age\nCount: 100\nMean:   34.5600\nMedian: 32.0000\n```\n\n---\n\n## 使い方のポイント\n\n| ステップ | 内容 |\n|----------|------|\n| 1 | `sample.csv` を用意。CSV は UTF‑8 エンコードで、ヘッダー行が必要です。 |\n| 2 | スクリプトを保存（例: `mean_median.py`）。実行権限を付与 `chmod +x mean_median.py` も可。 |\n| 3 | 端末で `python mean_median.py sample.csv age` のように実行します。 |\n\n- **標準ライブラリ版** は外部依存がなく、どの環境でも動作します。  \n- **pandas 版** は `pandas` があればさらに簡潔に書けます。  \n  ```bash\n  pip install pandas\n  ```\n\nご不明点や追加要件（例えば欠損値処理や列名の指定方法の変更）があれば教えてください！",
        "server": "192.168.1.254:11434"
    },
    {
        "instruction": "日本の中小企業の新製品を紹介する、200語以内のプレゼンテーション用スライドの要点を箇条書きで作成してください。",
        "input": "会社名、製品名、主な特徴、ターゲット市場、競合優位性などを教えてください。",
        "output": "以下の項目について教えていただければ、200語以内のプレゼン用スライド要点を箇条書きで作成いたします。  \n（※必要に応じて補足情報を追加してください）\n\n| 項目 | 例 / 参考 |\n|------|-----------|\n| 会社名 | 株式会社〇〇 |\n| 製品名 | 〇〇プロダクト |\n| 主な特徴 | ・機能①<br>・機能②<br>・技術的優位性 |\n| ターゲット市場 | ①業界（例：食品加工）<br>②地域（例：東日本） |\n| 競合優位性 | ・価格<br>・性能<br>・サービス |\n| 価格戦略 | 〇〇円（例：販売価格、割引等） |\n| 今後の展開 | ①販売チャネル<br>②マーケティング施策 |\n| 期待効果 | 売上増加、ブランド認知拡大等 |\n\n**入力例（参考）**  \n- 会社名：株式会社サンプル  \n- 製品名：エコパック  \n- 主な特徴：再利用可能、軽量、低コスト  \n- ターゲット市場：飲食業・小売業  \n- 競合優位性：国内初のカスタムデザイン機能  \n\nこの情報をいただければ、200語以内の箇条書きスライド要点をすぐに作成できます。ぜひご入力ください。",
        "server": "192.168.1.252:11434"
    },
    {
        "instruction": "ビジネスメールで、新製品の発表を顧客に伝える案内文を、200文字以内で作成し、敬語を使ってください。",
        "input": "拝啓 貴社ますますご清栄のこととお慶び申し上げます。この度弊社より新製品『〇〇』のご発表をさせていただきます。詳細は添付資料をご確認ください。何卒ご検討賜りますようお願い申し上げます。敬具",
        "output": "拝啓　貴社益々ご隆昌のことと存じます。弊社では本日、新製品『〇〇』を発表いたしました。詳細につきましては添付資料をご覧いただき、ご検討賜りますようお願い申し上げます。敬具",
        "server": "localhost:11434"
    },
    {
        "instruction": "友人への誕生日プレゼント提案メッセージを150文字以内で作成してください",
        "input": "友人の好きな趣味や好み、予算、関係性を教えてください",
        "output": "お友達の好きな趣味・好み、予算、そして関係性（親しい、兄弟感覚、友達感覚など）を教えていただければ、150文字以内のプレゼント提案メッセージを作成します。",
        "server": "192.168.1.252:11434"
    },
    {
        "instruction": "IT企業の新人研修資料を作成する際、業務フロー図を含むPDF資料を5ページ以内で作成し、各ページにタイトルと簡潔な説明文を付けてください。",
        "input": "IT企業名：ABCテック、研修対象：新入社員、業務フロー図：顧客情報管理→案件管理→開発→レビュー→リリース、ページ数：5ページ、各ページタイトル例：『業務フロー概要』、『顧客情報管理』、『案件管理』、『開発プロセス』、『レビューとリリース』、簡潔な説明文を添付してください。",
        "output": "## ① 業務フロー概要（1ページ目）\n\n| 項目 | 内容 |\n|------|------|\n| **タイトル** | **業務フロー概要** |\n| **簡潔な説明文** | ABCテックの主要業務プロセスを一目で把握できる全体図です。顧客情報管理からリリースまでの流れを視覚化し、業務の全体像を理解します。 |\n| **図・画像** | *顧客情報管理 → 案件管理 → 開発 → レビュー → リリース* という線で結んだフローチャート（中心に配置）。 |\n| **ポイント** | - フローの順序を把握<br>- 各工程の連携ポイントを確認 |\n\n---\n\n## ② 顧客情報管理（2ページ目）\n\n| 項目 | 内容 |\n|------|------|\n| **タイトル** | **顧客情報管理** |\n| **簡潔な説明文** | CRMシステムで顧客の基本情報・接触履歴を一元管理し、案件情報と紐づけます。正確な顧客データは案件のスムーズな進行に不可欠です。 |\n| **キーポイント** | 1. **情報入力**：顧客情報を正確に登録<br>2. **情報更新**：契約変更・連絡先変更を随時反映<br>3. **活用**：営業・案件担当者が顧客情報を参照して提案・連絡を行う |\n| **図・画像** | 顧客情報一覧画面のスクリーンショット（オプション） |\n\n---\n\n## ③ 案件管理（3ページ目）\n\n| 項目 | 内容 |\n|------|------|\n| **タイトル** | **案件管理** |\n| **簡潔な説明文** | プロジェクト管理ツール（Jira／Trello 等）で案件を作成・進捗管理し、ステークホルダーと連携します。 |\n| **キーポイント** | 1. **案件作成**：顧客情報から案件を生成<br>2. **進捗管理**：タスク・スプリントを可視化<br>3. **ステークホルダー連携**：関係者全員に進捗を共有 |\n| **図・画像** | 案件ダッシュボードの例（オプション） |\n\n---\n\n## ④ 開発プロセス（4ページ目）\n\n| 項目 | 内容 |\n|------|------|\n| **タイトル** | **開発プロセス** |\n| **簡潔な説明文** | 要件定義から実装・単体テストまで、アジャイル開発手法を採用しています。CI/CDによりコードの品質とリリース速度を確保します。 |\n| **キーポイント** | 1. **要件定義**：顧客要件を詳細化<br>2. **設計**：アーキテクチャ・設計書作成<br>3. **実装**：コーディングと単体テスト<br>4. **CI/CD**：自動ビルド・デプロイ |\n| **図・画像** | 開発フェーズを示すフローチャート（オプション） |\n\n---\n\n## ⑤ レビューとリリース（5ページ目）\n\n| 項目 | 内容 |\n|------|------|\n| **タイトル** | **レビューとリリース** |\n| **簡潔な説明文** | 完成したソフトウェアはコードレビュー・品質保証を経て、本番環境へリリースします。リリース後はサポート体制を整え、顧客満足度を維持します。 |\n| **キーポイント** | 1. **レビュー**：チェックリストで品質検証<br>2. **リリース手順**：デプロイスクリプト・ロールバック計画<br>3. **サポート**：リリース後の監視とバグ修正 |\n| **図・画像** | リリースフロー（例：ステージング→本番） |\n\n---\n\n### 使い方のヒント\n\n1. **タイトルは太字で上部に配置**  \n2. **説明文は2〜3行程度**で要点を抑える  \n3. **図・画像は空きスペースを活用**し、視覚的に理解しやすくする  \n4. **キーポイントは箇条書き**でポイントを明確化  \n5. **全体をPDFにまとめる際はページ番号**を表示して構成を明示  \n\nこれで、ABCテックの新入社員向け研修資料が5ページに収まります。必要に応じて図やスクリーンショットを追加して、よりインタラクティブな資料に仕上げてください。",
        "server": "192.168.1.254:11434"
    },
    {
        "instruction": "会議の議事録を箇条書きで10項目程度にまとめ、主要決定事項を強調してください。",
        "input": "会議の議事録の本文を貼り付けてください",
        "output": "以下に議事録の本文を貼り付けてください。 その内容をもとに、箇条書きで10項目程度にまとめ、主要決定事項を強調して作成します。",
        "server": "localhost:11434"
    },
    {
        "instruction": "顧客からの問い合わせメールを、礼儀正しく、問題解決に向けて具体的な手順を3つ提示する回答文に書き換えてください。",
        "input": "お世話になっております。注文番号12345の商品の発送遅延について教えてください。",
        "output": "件名：ご注文番号12345の発送遅延について（解決手順のご案内）\n\nお客様\n\nいつもご利用いただきまして、誠にありがとうございます。  \nご注文番号12345の発送遅延についてご不便をおかけし、心よりお詫び申し上げます。  \n以下の3つの手順に沿ってご確認いただけますと、スムーズに問題を解決できます。\n\n---\n\n### 1. ご注文ステータスのご確認  \n- **方法**：弊社サイトの「マイページ」>「ご注文履歴」へログインし、該当のご注文番号をクリックしてください。  \n- **確認ポイント**：  \n  - 「発送準備中」→「発送済み」へのステータス変更が反映されているか  \n  - 追跡番号（発行済みなら表示されます）を確認し、荷物の現在位置を追跡サイトでご確認  \n\n---\n\n### 2. 発送状況が更新されていない場合の対処  \n- **即時対応**：  \n  1. すぐに「お問い合わせ」フォーム（メール）または「カスタマーサポート電話番号」へご連絡ください。  \n  2. ご注文番号、購入日時、購入商品を明記し、発送遅延の詳細をお知らせください。  \n- **弊社からの対応**：  \n  - 受領後24時間以内に配送業者へ状況確認を行い、遅延原因と新たな配達予定日をご報告いたします。  \n  - 必要に応じて、別配送業者への切替えや、早急な再発送手配を進めます。  \n\n---\n\n### 3. 追加サポートのご案内  \n- **返金・割引のご相談**：遅延によってご不便が大きい場合は、返金または次回ご購入時の割引クーポンをご提案いたします。  \n- **カスタマーサポート**：  \n  - **電話**：0120‑XXX‑YYY（平日 10:00〜18:00）  \n  - **メール**：support@example.com  \n  - **オンラインチャット**：24時間対応（サイト右下にアイコンあり）  \n\nご不明点や追加のご要望がございましたら、いつでもお気軽にお知らせください。  \n迅速かつ確実にご対応させていただきます。\n\n何卒よろしくお願い申し上げます。\n\n---  \n株式会社○○ カスタマーサポート  \n担当：○○ ○○（電話：0120‑XXX‑YYY / メール：support@example.com）",
        "server": "192.168.1.252:11434"
    },
    {
        "instruction": "Pythonでpandasを使い、CSVファイルを読み込み、数値列の欠損値を列ごとの平均で置換し、置換後のデータフレームを同じディレクトリにcleaned_付きで保存するスクリプトを作成してください。",
        "input": "入力CSVファイル名を教えてください",
        "output": "以下は、**pandas** を使って指定した CSV ファイルの数値列の欠損値を列ごとの平均で置換し、置換後のデータフレームを同じディレクトリに `cleaned_` を付けて保存する Python スクリプトです。  \n\n```python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nCSVファイルの欠損値を平均で補完して保存するスクリプト\n\n使い方:\n    1. このファイルを `clean_missing.py` などとして保存\n    2. ターミナル/コマンドプロンプトで `python clean_missing.py` を実行\n    3. 画面に表示されるプロンプトに入力CSVファイル名を入力\n\"\"\"\n\nimport os\nimport pandas as pd\n\n\ndef main() -> None:\n    # ファイル名を入力してもらう\n    filename = input(\"入力CSVファイル名を教えてください: \").strip()\n\n    # ファイル存在チェック\n    if not os.path.isfile(filename):\n        print(f\"エラー: ファイル '{filename}' が存在しません。\")\n        return\n\n    # CSV読み込み\n    try:\n        df = pd.read_csv(filename)\n    except Exception as e:\n        print(f\"エラー: CSV の読み込みに失敗しました。\\n{e}\")\n        return\n\n    # 数値型の列を取得\n    numeric_cols = df.select_dtypes(include=[\"number\"]).columns\n\n    # 各数値列の欠損値を列平均で置換\n    for col in numeric_cols:\n        mean_val = df[col].mean()\n        df[col].fillna(mean_val, inplace=True)\n\n    # 出力ファイル名を生成 (同じディレクトリに cleaned_ 付きで保存)\n    dir_name, base_name = os.path.split(filename)\n    out_file = os.path.join(dir_name, f\"cleaned_{base_name}\")\n\n    # CSVへ保存\n    try:\n        df.to_csv(out_file, index=False)\n        print(f\"完了: 欠損値を平均で置換したデータフレームを '{out_file}' に保存しました。\")\n    except Exception as e:\n        print(f\"エラー: データフレームの保存に失敗しました。\\n{e}\")\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### 補足\n\n- **必要なパッケージ**  \n  ```bash\n  pip install pandas\n  ```\n\n- **実行例**  \n  ```bash\n  $ python clean_missing.py\n  入力CSVファイル名を教えてください: data.csv\n  完了: 欠損値を平均で置換したデータフレームを 'cleaned_data.csv' に保存しました。\n  ```\n\n- **注意点**  \n  - CSV のヘッダーが正しく設定されていること（列名があること）が前提です。  \n  - 欠損値は `NaN` として扱われます。  \n  - 数値以外の列（文字列等）は触らずにそのまま保存します。  \n  - 何らかのエラーが起きた場合はエラーメッセージが表示されます。  \n\nこれでご希望の処理が行えます。もし他に機能追加やカスタマイズしたい点があれば遠慮なくお知らせください。",
        "server": "192.168.1.254:11434"
    },
    {
        "instruction": "以下の製品不具合に関するメールを、顧客に送るため、丁寧な日本語で150語以内で作成してください。メールは件名、本文、署名の3部構成にしてください。",
        "input": "XYZ田中太郎2025年08月20日起動時クラッシュする",
        "output": "**件名**  \n【重要】XYZ製品起動時クラッシュに関するご連絡  \n\n**本文**  \n拝啓　平素より格別のお引き立てを賜り、厚く御礼申し上げます。  \n先日ご報告いただきました「XYZ製品」につきまして、2025年8月20日付で起動時にクラッシュする件を確認いたしました。  \n現在、弊社技術部にて原因究明と修正プログラムの作成を進めております。  \n修正が完了次第、速やかにご連絡し、再発防止策をご説明いたします。  \nご不便をおかけし誠に申し訳ございません。何かご不明点がございましたら、どうぞお気軽にご連絡ください。  \n\n敬具  \n\n〇〇株式会社  \n技術サポート部　田中 太郎  \nTEL: 03‑1234‑5678　メール: support@example.com",
        "server": "localhost:11434"
    },
    {
        "instruction": "営業会議の議事録を要約し、次回のアクション項目を箇条書きで5項目以内にまとめてください",
        "input": "会議の議事録を入力してください",
        "output": "以下に営業会議の議事録を貼り付けてください。  \n貼り付け後に要約と次回のアクション項目を5項目以内で箇条書きにまとめます。",
        "server": "192.168.1.252:11434"
    },
    {
        "instruction": "日本語の学習者向けに、日常会話でよく使われる敬語表現を例文とともに5つ挙げ、各例文の文法的特徴を簡潔に解説してください。",
        "input": "",
        "output": "## 1. 「お名前は何ですか？」\n- **文法的特徴**  \n  - **敬語接頭辞「お」**：名詞 *名前* の前に付けて丁寧・尊敬を示す。  \n  - **丁寧語「です」**：普通形の「だ」を丁寧にした形。  \n  - **疑問助詞「か」**：文末に付けて質問を表す。  \n\n## 2. 「少し時間をいただけますか？」\n- **文法的特徴**  \n  - **謙譲語「いただく」**：相手にお願いする際に自分の行為をへりくだって表す。  \n  - **可能形「いただける」**：許可・能力を表し、丁寧に聞く。  \n  - **丁寧語「ます」**：動詞を丁寧に終結させる。  \n  - **疑問助詞「か」**：質問の終止。  \n\n## 3. 「ご注文は何になさいますか？」\n- **文法的特徴**  \n  - **敬語接頭辞「ご」**：名詞 *注文* の前に付けて相手への敬意。  \n  - **尊敬語「なさる」**：自分ではなく相手の行為を高める敬語。  \n  - **丁寧語「ます」**：動詞を丁寧に終結。  \n  - **疑問助詞「か」**：質問。  \n\n## 4. 「こちらがご予約いただいたお部屋です。」\n- **文法的特徴**  \n  - **敬語接頭辞「ご」**：名詞 *予約* の前に付けて敬意。  \n  - **謙譲語「いただく」**（過去形）＋**受動形**：「いただいた」＝「いただく」＋受動。  \n  - **敬語接頭辞「お」**：名詞 *部屋* の前に付けて丁寧。  \n  - **丁寧語「です」**：名詞句の終結。  \n\n## 5. 「お先に失礼いたします。」\n- **文法的特徴**  \n  - **敬語接頭辞「お」**：名詞 *先* の前に付けて丁寧。  \n  - **謙譲語「いたします」**：自分の行為をへりくだって表す。  \n  - **丁寧語「です」**（省略形）で終結。  \n  - **社交辞令**：離席・退室時に使う、相手への配慮を示す表現。  \n\nこれらの例文は、日常のビジネスシーンや公共の場で頻繁に使われる敬語表現です。各文の語尾や接頭辞を覚えておくと、自然に丁寧な会話ができるようになります。",
        "server": "192.168.1.254:11434"
    },
    {
        "instruction": "日常会話で使えるカジュアルな日本語のフレーズを5つ作成し、英語訳と発音記号を併記してください",
        "input": "",
        "output": "以下は、日常会話でよく使えるカジュアルな日本語フレーズと、その英語訳・発音（IPA）です。  \n\n| # | 日本語フレーズ | 発音（ローマ字） | 英語訳 | IPA 発音記号 |\n|---|----------------|------------------|--------|--------------|\n| 1 | それな | sore na | “Exactly / That’s right!” | **[sɯeɾena]** |\n| 2 | やばい！ | yabai | “Wow! / That’s intense!” | **[ja̠bai]** |\n| 3 | まぁ、いいや。 | maa, ii ya | “Never mind / Let it go.” | **[maː iːja]** |\n| 4 | ちょっと待って。 | chotto matte | “Hold on a sec.” | **[t͡sʲo̞to̞ mat͡te]** |\n| 5 | どうも。 | doumo | “Thanks / Hi.” | **[doːmo]** |\n\n> **備考**  \n> - それな は友達同士の同意を示す一言で、英語の “Exactly!” と近いニュアンスです。  \n> - やばい は状況によって “Good” でも “Bad” でも使えますが、ポジティブな感嘆としてよく聞かれます。  \n> - まぁ、いいや は軽い諦め・放置の意味。  \n> - ちょっと待って は「ちょっと待ってください」の省略形。  \n> - どうも は「どうもありがとう」や「どうもこんにちは」などの短縮形。  \n\nこれらのフレーズを覚えておくと、友人や同僚との会話がもっと自然でフレンドリーに進められます。ぜひ試してみてください！",
        "server": "localhost:11434"
    }
]