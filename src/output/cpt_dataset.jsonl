{"text": "# React Hooks Guide\n\n## Introduction\n\nReact Hooks allow you to use state and lifecycle methods in functional components. No need to write class components to access React features.\n\n## Basic Hooks\n\n### useState\n\nHook for managing state.\n\n```javascript\nimport React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <h2>Count: {count}</h2>\n      <button onClick={increment}>+1</button>\n    </div>\n  );\n}\n\nexport default Counter;\n```\n\n### useEffect\n\nHook for handling side effects.\n\n```javascript\nimport React, { useState, useEffect } from 'react';\n\nfunction UserProfile({ userId }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`/api/users/${userId}`);\n        const userData = await response.json();\n        setUser(userData);\n      } catch (error) {\n        console.error('Failed to fetch user:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUser();\n  }, [userId]);\n\n  if (loading) return <div>Loading...</div>;\n  if (!user) return <div>User not found</div>;\n\n  return (\n    <div>\n      <h1>{user.name}</h1>\n      <p>Email: {user.email}</p>\n    </div>\n  );\n}\n```\n\n## Custom Hooks\n\nCreate reusable logic with custom hooks.\n\n```javascript\nimport { useState, useEffect } from 'react';\n\nfunction useFetch(url) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(url);\n        const result = await response.json();\n        setData(result);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n\n  return { data, loading, error };\n}\n```\n\n## Rules of Hooks\n\n1. Only call hooks at the top level\n2. Only call hooks from React functions\n\nReact Hooks make functional components more powerful and code more reusable.\n", "source": "sample2.md", "length": 2225, "type": "code_documentation"}
{"text": "# Python Machine Learning Basics\n\n## Overview\n\nPython is one of the most popular programming languages for machine learning. It offers rich libraries and simple syntax, making it accessible for beginners and experts alike.\n\n## Key Libraries\n\n### NumPy\nThe foundation library for numerical computing.\n\n```python\nimport numpy as np\n\n# Create array\narr = np.array([1, 2, 3, 4, 5])\nprint(arr)\n\n# Matrix operations\nmatrix = np.array([[1, 2], [3, 4]])\nresult = np.dot(matrix, matrix)\nprint(result)\n```\n\n### Pandas\nLibrary for data manipulation and analysis.\n\n```python\nimport pandas as pd\n\n# Create DataFrame\ndf = pd.DataFrame({\n    'name': ['Alice', 'Bob', 'Charlie'],\n    'age': [25, 30, 35],\n    'city': ['Tokyo', 'Osaka', 'Kyoto']\n})\n\nprint(df.head())\nprint(df.describe())\n```\n\n## Learning Path\n\n1. Learn Python basics\n2. Master NumPy and Pandas\n3. Implement ML algorithms\n4. Work on real projects\n\nMachine learning requires continuous learning. Balance theory with practice for best results.\n", "source": "sample.md", "length": 991, "type": "code_documentation"}
